import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from config import BOT_KEY
from aiogram.types.web_app_info import WebAppInfo
from aiogram.dispatcher.filters import Text, Command
from aiogram.contrib.middlewares.logging import LoggingMiddleware

# types.ContentType.AUDIO
# from aiogram.utils.exceptions
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=BOT_KEY)
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher(bot=bot)
dp.middleware.setup(LoggingMiddleware())


# @dp.message_handler(Text(equals='s'))
# @dp.message_handler(content_types=[types.ContentType.AUDIO])
# @dp.message_handler(commands=)

@dp.message_handler()
async def start(message: types.Message):
    text = (
        f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DonorSearch App!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –¥–æ–Ω–∞—Ü–∏—é, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ä–æ—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –∫—Ä–æ–≤—å, –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∂—É—Ä–Ω–∞–ª–∞ –∏ –º–Ω–æ–≥–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ')
    website_url1 = 'https://shorturl.at/eprEL'
    url_help_project = 'https://donorsearch.org/donate/'


    keyboard = types.InlineKeyboardMarkup()
    handler_button0 = types.InlineKeyboardButton(text='ü©∏–ú–æ–∏ –¥–æ–Ω–∞—Ü–∏–∏', callback_data='my_donations')
    handler_button1 = types.InlineKeyboardButton(text='üìåC–¥–∞—Ç—å –∫—Ä–æ–≤—å', callback_data='donate_blood')
    handler_button2 = types.InlineKeyboardButton(text='üíå–ñ—É—Ä–Ω–∞–ª –∏ —Å–æ–±—ã—Ç–∏—è', callback_data='magazine')
    handler_button3 = types.InlineKeyboardButton(text='üí∏–ü–æ–º–æ—â—å –ø—Ä–æ–µ–∫—Ç—É', web_app=WebAppInfo(url=url_help_project))
    handler_button4 = types.InlineKeyboardButton(text='üë§M–æ–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data='profile')
    keyboard.row(handler_button0, handler_button1)
    keyboard.row(handler_button2, handler_button3)
    keyboard.row(handler_button4)
    await message.answer(text=text, reply_markup=keyboard)


#


@dp.callback_query_handler(text='my_donations')
async def my_donations(callback: types.CallbackQuery):
    text = (
        f'–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –∑–¥–µ—Å—å —Å–≤–æ–∏ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Å—Ç—É–ø–∫–∏, –¥–æ–±–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ, –ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –±—É–¥—É—â–∏–µ –¥–æ–Ω–æ—Ä—Å–∫–∏–µ –∞–∫—Ü–∏–∏, –ø–æ–ª—É—á–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.')
    website_url1 = 'https://shorturl.at/eprEL'
    url4 = 'https://shorturl.at/eprEL'
    url0 = 'https://shorturl.at/fJY15'

    keyboard = types.InlineKeyboardMarkup()
    handler_button0 = types.InlineKeyboardButton(text='ü©∏–î–æ–±–∞–≤–∏—Ç—å –¥–æ–Ω–∞—Ü–∏—é', web_app=WebAppInfo(url=url0))
    handler_button1 = types.InlineKeyboardButton(text='üìÖ–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–æ–Ω–∞—Ü–∏—é', web_app=WebAppInfo(url=url0))
    handler_button2 = types.InlineKeyboardButton(text='‚úèÔ∏è–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–Ω–∞—Ü–∏—é', web_app=WebAppInfo(url=website_url1))
    handler_button3 = types.InlineKeyboardButton(text='üèÜ–†–µ–π—Ç–∏–Ω–≥ –¥–æ–Ω–æ—Ä–æ–≤', web_app=WebAppInfo(url=website_url1))
    handler_button4 = types.InlineKeyboardButton(text='üîñ–ü–∞–º—è—Ç–∫–∞ –¥–æ–Ω–æ—Ä–∞', callback_data='send_photo')
    keyboard.row(handler_button0)
    keyboard.row(handler_button1)
    keyboard.row(handler_button2)

    keyboard.row(handler_button3, handler_button4)

    await callback.message.answer(text=text, reply_markup=keyboard)


@dp.callback_query_handler(text='donate_blood')
async def donate_blood(callback: types.CallbackQuery):
    text = (
        f'–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –∑–¥–µ—Å—å —Å–≤–æ–∏ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Å—Ç—É–ø–∫–∏, –¥–æ–±–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ, –ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –±—É–¥—É—â–∏–µ –¥–æ–Ω–æ—Ä—Å–∫–∏–µ –∞–∫—Ü–∏–∏, –ø–æ–ª—É—á–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.')
    website_url1 = 'https://shorturl.at/eprEL'
    url4 = 'https://shorturl.at/eprEL'
    url0 = 'https://shorturl.at/fJY15'
    url_centers_blood = 'https://donorsearch.org/bloodstations/sankt-peterburg/'

    keyboard = types.InlineKeyboardMarkup()
    handler_button0 = types.InlineKeyboardButton(text='üè•–¶–µ–Ω—Ç—Ä—ã –∫—Ä–æ–≤–∏', web_app=WebAppInfo(url=url_centers_blood))
    handler_button1 = types.InlineKeyboardButton(text='üö®–°—Ä–æ—á–Ω—ã–µ –∑–∞—è–≤–∫–∏', callback_data='null')
    handler_button2 = types.InlineKeyboardButton(text='üîñ–ü–∞–º—è—Ç–∫–∞ –¥–æ–Ω–æ—Ä–∞', callback_data='send_photo')

    keyboard.row(handler_button0, handler_button1)
    keyboard.row(handler_button2)
    await callback.message.answer(text=text, reply_markup=keyboard)


@dp.callback_query_handler(text='magazine')
async def magazine_and_events(callback: types.CallbackQuery):
    text = (
        f'–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –∑–¥–µ—Å—å —Å–≤–æ–∏ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Å—Ç—É–ø–∫–∏, –¥–æ–±–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ, –ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –±—É–¥—É—â–∏–µ –¥–æ–Ω–æ—Ä—Å–∫–∏–µ –∞–∫—Ü–∏–∏, –ø–æ–ª—É—á–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.')

    url_states = 'https://journal.donorsearch.org/?utm_source=header&utm_medium=ds&utm_campaign=donor_search'
    url_projects = 'https://unity.donorsearch.org/'
    keyboard = types.InlineKeyboardMarkup()
    handler_button0 = types.InlineKeyboardButton(text='üéÆ–ò–≥—Ä—ã', callback_data='null')
    handler_button1 = types.InlineKeyboardButton(text='üìÑ–°—Ç–∞—Ç—å–∏', web_app=WebAppInfo(url=url_states))
    handler_button2 = types.InlineKeyboardButton(text='‚≠êÔ∏èÔ∏è–°–ø–µ—Ü–ø—Ä–æ–µ–∫—Ç—ã', web_app=WebAppInfo(url=url_projects))

    keyboard.row(handler_button0, handler_button1)
    keyboard.row(handler_button2)
    await callback.message.answer(text=text, reply_markup=keyboard)


# @dp.callback_query_handler(text='profile')
# async def profile(callback: types.CallbackQuery):
#     text = (
#         f'–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –∑–¥–µ—Å—å —Å–≤–æ–∏ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Å—Ç—É–ø–∫–∏, –¥–æ–±–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ, –ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –±—É–¥—É—â–∏–µ –¥–æ–Ω–æ—Ä—Å–∫–∏–µ –∞–∫—Ü–∏–∏, –ø–æ–ª—É—á–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.')
#     website_url1 = 'https://shorturl.at/eprEL'
#     url0 = 'https://shorturl.at/fJY15'
#
#     keyboard = types.InlineKeyboardMarkup()
#     handler_button0 = types.InlineKeyboardButton(text='üéÆ–ò–≥—Ä—ã', web_app=WebAppInfo(url=url0))
#     handler_button1 = types.InlineKeyboardButton(text='üìÑ–°—Ç–∞—Ç—å–∏', web_app=WebAppInfo(url=url0))
#     handler_button2 = types.InlineKeyboardButton(text='‚≠êÔ∏èÔ∏è–°–ø–µ—Ü–ø—Ä–æ–µ–∫—Ç—ã', web_app=WebAppInfo(url=website_url1))
#
#     keyboard.row(handler_button0, handler_button1)
#     keyboard.row(handler_button2)
#     await callback.message.answer(text=text, reply_markup=keyboard)


@dp.callback_query_handler(text='profile')
async def profile(callback: types.CallbackQuery):
    text = (
        f'–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ DonorSearch –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å –ü–æ—á–µ—Ç–Ω–æ–≥–æ –¥–æ–Ω–æ—Ä–∞. –£–∑–Ω–∞–π—Ç–µ –æ –±–æ–Ω—É—Å–∞—Ö –¥–ª—è –¥–æ–Ω–æ—Ä–æ–≤ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ç–æ–ø-100 –¥–æ–Ω–æ—Ä–æ–≤.')
    website_url1 = 'https://shorturl.at/eprEL'
    url_signin = 'https://shorturl.at/ioz18'
    url_bonus ='https://shorturl.at/fAPRT'
    url0 = 'https://shorturl.at/fJY15'

    keyboard = types.InlineKeyboardMarkup()
    handler_button0 = types.InlineKeyboardButton(text='üéñ–°—Ç–∞—Ç—É—Å –ø–æ—á–µ—Ç–Ω–æ–≥–æ –¥–æ–Ω–æ—Ä–∞', callback_data='null')
    handler_button1 = types.InlineKeyboardButton(text='üë§–í—Ö–æ–¥ –∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', web_app=WebAppInfo(url=url_signin))
    handler_button2 = types.InlineKeyboardButton(text='üéÅ–ë–æ–Ω—É—Å—ã',
                                                 web_app=WebAppInfo(url=url_bonus))
    handler_button3 = types.InlineKeyboardButton(text='üèÜ–†–µ–π—Ç–∏–Ω–≥ –¥–æ–Ω–æ—Ä–æ–≤', web_app=WebAppInfo(url=website_url1))

    keyboard.row(handler_button0)
    keyboard.row(handler_button1)
    keyboard.row(handler_button2, handler_button3)
    await callback.message.answer(text=text, reply_markup=keyboard)


#
# @dp.callback_query_handler(text='send_photo')
# async def profile(callback: types.CallbackQuery):
#
#     await bot.send_photo(chat_id=callback.message.chat.id,
#                          photo='https://avatars.mds.yandex.net/i?id=c39b4a72a7e6228d38bf87fbe5744f6084ec8773-9052192-images-thumbs&n=13')
#     await bot.send_photo(chat_id=callback.message.chat.id,
#                          photo='https://avatars.mds.yandex.net/i?id=c39b4a72a7e6228d38bf87fbe5744f6084ec8773-9052192-images-thumbs&n=13')

async def send_local_photo(chat_id, photo_path):
    with open(photo_path, 'rb') as photo:
        photo_data = types.InputFile(photo)
        await bot.send_photo(chat_id, photo=photo_data)


@dp.callback_query_handler(text='send_photo')
async def profile(callback: types.CallbackQuery):
    await send_local_photo(chat_id=callback.message.chat.id, photo_path=f'./files/one.jpg')
    await send_local_photo(chat_id=callback.message.chat.id, photo_path=f'./files/two.jpg')
    await send_local_photo(chat_id=callback.message.chat.id, photo_path=f'./files/three.jpg')


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
